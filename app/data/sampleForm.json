{
	//フォーム要素の定義
	//上から順にフォーム要素が生成されます
	//各アイテムのキーがinput(またはselectかtextarea)のnameになります
	"items": {
		//基本の定義
		//ほとんどの場合labelとtypeを定義することになると思います。
		//typeに指定できる値は以下です
		// - text
		// - password
		// - file
		// - checkbox
		// - radio
		// - select
		// - textarea
		// - hidden
		// - date(独自拡張)
		// HTML5で追加されたemailやurlなどは指定できません。(validate.jsで対応)
		// rules以下にはvalidate.jsに渡すruleを指定します。
		// attrs以下にはinput要素に付加する属性を指定します。
		"lastname": {
			"label" : "姓",
			"type": "text",
			"rules": {
				"required": true,
				"maxlength": 10
			},
			"attrs": {
				"class" : "input-mini",
				"size" : 5,
				"placeholder" : "姓"
			}
		},
		// rules, attrsは省略して展開して記述することができます。
		// 展開して記述した場合はキーから判断して適切な方にまわされます
		// follow: trueを指定した場合、アイテムは改行せずに前の行の後ろにつかされます。
		"firstname": {
			"label" : "名",
			"type": "text",
			"required": "名を名乗れ",
			"maxlength": 10,
			"class" : "input-mini",
			"size" : 5,
			"follow" : true,
			"placeholder" : "名"
		},
		//labelを省略した場合はJSONのキーがlabelになります。
		//typeを省略した場合はtextになります。
		"lastname_kana": {
			//"label" : "姓(カナ)",
			//"type": "text",
			"rules": {
				"required": {
					"value" : true,
					"message" : "カナで姓をいれろ"
				},
				"maxlength": 10
			},
			"class" : "input-mini",
			"size" : 5,
			"katakana" : true,
			"placeholder" : "カタカナで姓を入力"
		},
		"firstname_kana": {
			"label" : "名(カナ)",
			"type": "text",
			"required": true,
			"maxlength": 10,
			"class" : "input-mini",
			"size" : 5,
			"follow" : true,
			"katakana" : true,
			"placeholder" : "カタカナで名を入力"
		},
		//labelにはHTMLが書けます。
		"mail": {
			"label" : "E-Mail<span style='color:red;'>(必須)</span>",
			"type": "text",
			"rules" : {
				"required": true,
				"maxlength": 256,
				"email" : true
			},
			"class" : "input-xlarge",
			"size" : 40
		},
		"password": {
			"label": "パスワード",
			"type": "password",
			"required": true,
			"digits": true,
			"minlength": 6,
			"maxlength": 16
		},
		//同値確認を行う場合には確認を行うアイテムのキーをequalToに指定します。
		//(validate.js標準ではid指定ですがformbuilderではidを自動生成するため指定方法が異なります。)
		"password_confirm": {
			"label": "パスワード(確認)",
			"type": "password",
			"rules" : {
				"equalTo": "password"
			}
		},
		//type=dateを指定した場合はjQueryUIのdatepickerが適用され日付のエラーチェックが行われます。
		"birthday": {
			"label": "誕生日",
			"type": "date",
			"min" : "2000-01-01",
			"max" : "2013-07-20"
		},
		//ミニマムではこういう省略表記も可能です。
		//type="text"に展開されます。
		"会社": "text",
		"部署名": {
			"label" : "部署名",
			"type" : "text",
			"maxlength" : 20,
			"requiredIf" : [
				{ "name" : "会社", "op" : "in", "value" : ["*"]}
			]
		},
		//selectの場合はvaluesに配列でoptionを指定します。
		//valuesの書き方は正表記と略表記の2種類あります。
		//略表記では文字列で「valule:text」のように指定します。「:」が無い場合はvalueとtextは同じになります。
		//初期選択の値をselectedで指定できます。
		"post": {
			"label" : "役職",
			"type": "select",
			"values": [
				"1:社長",
				"hoge",
				"2:部長",
				"3:課長",
				"4:係長",
				"5:平社員"
			],
			"selected" : "2"
		},
		//正表記ではvalueとtextをオブジェクトのキーで明示します。
		//selectedはvaluesの中で指定することもできます。
		//またdisabledが指定できます。
		"numOfEmployee": {
			"label" : "従業員数",
			"type": "select",
			"values": [
				{ "value":"1", "text": "1000人以上"},
				{ "value":"2", "text": "500-1000人"},
				{ "value":"3", "text": "100-500人"},
				{ "value":"4", "text": "50-100人", "selected" : true},
				{ "value":"5", "text": "10-50人"},
				{ "value":"6", "text": "10人以下", "disabled" : true}
			]
		},
		//valuesの中でgroupを指定することでoptGroupを生成します。
		//multipleの場合はselectedにカンマ区切りで複数の値を指定できます。
		"select3": {
			"label" : "業種(複数選択可)",
			"type": "select",
			"values": [
				{ "value": "1", "text": "システムインテグレーション", "group" : "開発系"},
				{ "value": "2", "text": "パッケージ開発"},
				{ "value": "3", "text": "サービス開発"},
				{ "value": "4", "text": "システム運用管理", "group" : "運用系"},
				{ "value": "5", "text": "コンサルティング", "group" : "運用系"},
				{ "value": "6", "text": "その他", "group" : "その他"}
			],
			"size": 6,
			"multiple": true,
			"selected" : "1,3,5"
		},
		//checkbox
		//複数のチェックボックスを並べることができます。
		//各チェックボックスのlabel/valueの表記方法はselectの場合と同じです。
		//checkedを指定することでデフォルトでチェック状態にすることができます。
 		"language": {
			"label": "使用している言語を選択してください。(複数可))",
			"type" : "checkbox",
			"requiredIf": "select3==1||select3==2||select3==3",
			"values": [
				"1:Java",
				"2:C++",
				"3:Ruby",
				"4:PHP",
				"5:Scala",
				"6:JavaScript"
			],
			"checked": "2,3,6"
		},
		//radio
		//複数のラジオボタンを並べることができます。
		//各ラジオボタンのlabel/valueの表記方法はselectの場合と同じです。
		//checkedとdisabledをvaluesの中で指定することができます。
		//breakを指定するとそこで改行します。
		"experience": {
			"label" : "経験年数",
			"type": "radio",
			"required": true,
			"values": [
				{ "value": "1", "text": "10年以上"},
				{ "value": "2", "text": "8-10年"},
				{ "value": "3", "text": "5-8年", "checked" : true, "break" : true},
				{ "value": "4", "text": "3-5年"},
				{ "value": "5", "text": "2,3年", "break" : true},
				{ "value": "6", "text": "1年以下", "disabled" : true}
			]
		},
		"tel1" : {
			"label" : "電話",
			"tel" : true
		},
		"tel2" : {
			"label" : "携帯電話",
			"tel" : true
		},
		"tel3" : {
			"label" : "会社電話",
			"tel" : true
		},
		//テキストエリア
		"text": {
			"label": "説明",
			"type": "textarea",
			"rows": 10,
			"cols": 40,
			"value": "ほげほげ",
			"required": true
		},
		//ファイル
		"file": {
			"label" : "ファイル添付",
			"type": "file",
			"required": true
		},
		//checkboxを一つだけ表示する場合
 		"checkbox2": {
			"label" : " ", //ラベルを空にしたい場合はスペースを指定してください
			"type": "checkbox",
			"required": "いいからチェックしろ",
			"checked": true,
			"values" : [
				"ture:内容に同意して次に進む"
			]
		},
		"id" : {
			"type" : "hidden",
			"value" : "test"
		}
	},
	"debug" : true,
	"rules" : {
		"requiredOne": "tel1,tel2,tel3"
	}
}