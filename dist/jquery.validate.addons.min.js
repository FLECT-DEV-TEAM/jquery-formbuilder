var module$jquery={};module$jquery.validate={};var module$jquery.validate.addons={};
(function($){if($.validator){$.validator.addMethod("hiragana",function(value,element){return this.optional(element)||/^([\u3041-\u3093\u30fc]+)$/.test(value)},"Please enter only Hiragana.");$.validator.addMethod("katakana",function(value,element){return this.optional(element)||/^([\u30a1-\u30f6\u30fc]+)$/.test(value)},"Please enter only Katakana.");$.validator.addMethod("hankana",function(value,element){return this.optional(element)||/^([\uff67-\uff9d\uff9e\uff9f]+)$/.test(value)},"Please enter only hankaku kana.");
$.validator.addMethod("alpha",function(value,element){return this.optional(element)||/^([a-zA-z\u00a5s]+)$/.test(value)},"Please enter only alphabet.");$.validator.addMethod("alphanum",function(value,element){return this.optional(element)||/^([a-zA-Z0-9]+)$/.test(value)},"Please enter only alphabet or number.");$.validator.addMethod("postcode",function(value,element){return this.optional(element)||/^\u00a5d{3}\u00a5-\u00a5d{4}$/.test(value)},"Please enter a valid postcode.");$.validator.addMethod("tel",
function(value,element){return this.optional(element)||/^[0-9-]{10,13}$/.test(value)},"Please enter a valid telephone number.");$.validator.addMethod("regexp",function(value,element,param){return this.optional(element)||(new RegExp(param)).test(value)},'Please enter "{0}" format.');$.validator.messages.requiredOne="At least onf of {0} is required."}})(jQuery);